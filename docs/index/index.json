{"interfaceLanguages":{"swift":[{"children":[{"title":"Installation","type":"groupMarker"},{"path":"\/documentation\/instruments\/installation","title":"Installation","type":"article"},{"title":"List of Tools","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/instruments\/bytesconstructiblenumber\/init(bigendian:)","title":"init(bigEndian: Self)","type":"init"},{"path":"\/documentation\/instruments\/bytesconstructiblenumber\/init(bytes:endianness:)","title":"init(bytes: [UInt8], endianness: Endianness)","type":"init"},{"children":[{"children":[{"path":"\/documentation\/instruments\/bytesconstructiblenumber\/init(data:endianness:)-5hyh","title":"init(data: Data, endianness: Endianness)","type":"init"}],"title":"BytesConstructibleNumber Implementations","type":"groupMarker"}],"path":"\/documentation\/instruments\/bytesconstructiblenumber\/init(data:endianness:)-8ub7m","title":"init(data: Data, endianness: Endianness)","type":"init"},{"path":"\/documentation\/instruments\/bytesconstructiblenumber\/init(littleendian:)","title":"init(littleEndian: Self)","type":"init"}],"path":"\/documentation\/instruments\/bytesconstructiblenumber","title":"BytesConstructibleNumber","type":"protocol"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/instruments\/endianness\/big","title":"case big","type":"case"},{"path":"\/documentation\/instruments\/endianness\/little","title":"case little","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/instruments\/endianness\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/instruments\/endianness\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/instruments\/endianness","title":"Endianness","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/instruments\/debouncefunction\/init(debounceinterval:action:)","title":"init(debounceInterval: TimeInterval, action: (Argument) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/instruments\/debouncefunction\/call()","title":"func call()","type":"method"},{"path":"\/documentation\/instruments\/debouncefunction\/call(with:)","title":"func call(with: Argument)","type":"method"},{"path":"\/documentation\/instruments\/debouncefunction\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/instruments\/debouncefunction\/dynamicallycall(witharguments:)","title":"func dynamicallyCall(withArguments: [Argument])","type":"method"},{"path":"\/documentation\/instruments\/debouncefunction\/fire()","title":"func fire()","type":"method"},{"path":"\/documentation\/instruments\/debouncefunction\/fire(with:)","title":"func fire(with: Argument)","type":"method"}],"path":"\/documentation\/instruments\/debouncefunction","title":"DebounceFunction","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/instruments\/debouncefunctionconfiguration\/debounceinterval","title":"static var debounceInterval: TimeInterval","type":"property"}],"path":"\/documentation\/instruments\/debouncefunctionconfiguration","title":"DebounceFunctionConfiguration","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/instruments\/hexstringdatadecoder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/instruments\/hexstringdatadecoder\/decode(_:)","title":"func decode(String) throws -> Data","type":"method"}],"path":"\/documentation\/instruments\/hexstringdatadecoder","title":"HexStringDataDecoder","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/instruments\/hexstringdatadecodererror\/==(_:_:)","title":"static func == (HexStringDataDecoderError, HexStringDataDecoderError) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/instruments\/hexstringdatadecodererror\/unexpectedbyte(_:location:)","title":"case unexpectedByte(String, location: Int)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/instruments\/hexstringdatadecodererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/instruments\/hexstringdatadecodererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/instruments\/hexstringdatadecodererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/instruments\/hexstringdatadecodererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/instruments\/hexstringdatadecodererror","title":"HexStringDataDecoderError","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/instruments\/lldb\/isattached()","title":"static func isAttached() -> Bool","type":"method"},{"path":"\/documentation\/instruments\/lldb\/preventfromattaching()","title":"static func preventFromAttaching()","type":"method"}],"path":"\/documentation\/instruments\/lldb","title":"LLDB","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/instruments\/weakshared\/init(instance:)","title":"init(instance: () -> Instance)","type":"init"},{"path":"\/documentation\/instruments\/weakshared\/init(instancefactory:)","title":"init(instanceFactory: () -> Instance)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/instruments\/weakshared\/wrappedvalue","title":"var wrappedValue: Instance","type":"property"}],"path":"\/documentation\/instruments\/weakshared","title":"WeakShared","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/instruments\/securerandom\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/instruments\/securerandom\/nextbytes(count:)","title":"func nextBytes(count: Int) throws -> [UInt8]","type":"method"},{"path":"\/documentation\/instruments\/securerandom\/nextdata(count:)","title":"func nextData(count: Int) throws -> Data","type":"method"},{"path":"\/documentation\/instruments\/securerandom\/nextint()","title":"func nextInt() throws -> Int","type":"method"}],"path":"\/documentation\/instruments\/securerandom","title":"SecureRandom","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/instruments\/securerandomerror\/cannotgenerate","title":"case cannotGenerate","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/instruments\/securerandomerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/instruments\/securerandomerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/instruments\/securerandomerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/instruments\/securerandomerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/instruments\/securerandomerror","title":"SecureRandomError","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/instruments\/timer\/init(interval:repeats:queue:action:)","title":"init(interval: TimeInterval, repeats: Bool, queue: DispatchQueue?, action: () -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/instruments\/timer\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/instruments\/timer\/resume()","title":"func resume()","type":"method"},{"path":"\/documentation\/instruments\/timer\/suspend()","title":"func suspend()","type":"method"}],"path":"\/documentation\/instruments\/timer","title":"Timer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/instruments\/linewisereader\/init(fileurl:)","title":"init?(fileURL: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/instruments\/linewisereader\/chunksize","title":"var chunkSize: Int","type":"property"},{"path":"\/documentation\/instruments\/linewisereader\/encoding","title":"var encoding: String.Encoding","type":"property"},{"path":"\/documentation\/instruments\/linewisereader\/linedelimiter","title":"var lineDelimiter: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/instruments\/linewisereader\/readline()-37kkd","title":"func readLine() -> Data?","type":"method"},{"path":"\/documentation\/instruments\/linewisereader\/readline()-zcaq","title":"func readLine() -> String?","type":"method"}],"path":"\/documentation\/instruments\/linewisereader","title":"LinewiseReader","type":"class"},{"path":"\/documentation\/instruments\/extensions","title":"Extensions","type":"article"}],"path":"\/documentation\/instruments","title":"Instruments","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}