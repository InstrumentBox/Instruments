{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/instruments\/unfairlock\/try()"]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/instruments.Instruments\/documentation\/Instruments","doc:\/\/instruments.Instruments\/documentation\/Instruments\/UnfairLock"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"Instruments"}],"roleHeading":"Instance Method","role":"symbol","externalID":"s:11Instruments10UnfairLockC3trySbyF","title":"try()","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`try`"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"identifier":{"url":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/UnfairLock\/try()","interfaceLanguage":"swift"},"abstract":[{"text":"Locks an ","type":"text"},{"code":"UnfairLock","type":"codeVoice"},{"type":"text","text":" if it is not already locked."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`try`","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"It is invalid to surround this function with a retry loop, if this function returns false,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the program must be able to proceed without having acquired the lock, or it must call"},{"type":"text","text":" "},{"code":"lock()","type":"codeVoice"},{"type":"text","text":" directly (a retry loop around "},{"type":"codeVoice","code":"try()"},{"type":"text","text":" amounts to an inefficient implementation of "},{"code":"lock()","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"that hides the lock waiter from the system and prevents resolution of priority inversions)."}]}]}],"references":{"doc://instruments.Instruments/documentation/Instruments/UnfairLock":{"abstract":[{"type":"text","text":"Low-level lock that allows waiters to block efficiently on contention."}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/UnfairLock","type":"topic","kind":"symbol","role":"symbol","title":"UnfairLock","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnfairLock"}],"url":"\/documentation\/instruments\/unfairlock","navigatorTitle":[{"text":"UnfairLock","kind":"identifier"}]},"doc://instruments.Instruments/documentation/Instruments/UnfairLock/try()":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`try`","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","abstract":[{"text":"Locks an ","type":"text"},{"type":"codeVoice","code":"UnfairLock"},{"text":" if it is not already locked.","type":"text"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/UnfairLock\/try()","url":"\/documentation\/instruments\/unfairlock\/try()","title":"try()","role":"symbol"},"doc://instruments.Instruments/documentation/Instruments":{"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments","type":"topic","role":"collection","title":"Instruments","url":"\/documentation\/instruments","abstract":[{"inlineContent":[{"type":"text","text":"Instruments"}],"type":"emphasis"},{"type":"text","text":" is a package that provides you with set of tools that may be handy for Swift"},{"type":"text","text":" "},{"text":"development.","type":"text"}],"kind":"symbol"}}}