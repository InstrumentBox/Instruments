{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Instruments\/documentation\/Instruments"]]},"seeAlsoSections":[{"title":"List of Tools","identifiers":["doc:\/\/Instruments\/documentation\/Instruments\/BytesConstructibleNumber","doc:\/\/Instruments\/documentation\/Instruments\/Endianness","doc:\/\/Instruments\/documentation\/Instruments\/DebounceFunction","doc:\/\/Instruments\/documentation\/Instruments\/DebounceFunctionConfiguration","doc:\/\/Instruments\/documentation\/Instruments\/HexStringDataDecoder","doc:\/\/Instruments\/documentation\/Instruments\/HexStringDataDecoderError","doc:\/\/Instruments\/documentation\/Instruments\/LLDB","doc:\/\/Instruments\/documentation\/Instruments\/WeakShared","doc:\/\/Instruments\/documentation\/Instruments\/Pointer","doc:\/\/Instruments\/documentation\/Instruments\/SecureRandom","doc:\/\/Instruments\/documentation\/Instruments\/SecureRandomError","doc:\/\/Instruments\/documentation\/Instruments\/Timer","doc:\/\/Instruments\/documentation\/Instruments\/LineByLineReader","doc:\/\/Instruments\/documentation\/Instruments\/LinewiseReader","doc:\/\/Instruments\/documentation\/Instruments\/Enum()","doc:\/\/Instruments\/documentation\/Instruments\/Foundation","doc:\/\/Instruments\/documentation\/Instruments\/_Concurrency"],"generated":true}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Instruments\/documentation\/Instruments\/Swift"},"topicSections":[{"title":"Extended Structures","identifiers":["doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Array","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int16","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int32","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int64","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int8","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/String","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt16","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt32","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt64","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt8"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/instruments\/swift"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"collection","modules":[{"name":"Instruments"}],"roleHeading":"Extended Module","externalID":"s:m:s:e:s:SS11InstrumentsE13base64Encoded7optionsSSSgSo27NSDataBase64EncodingOptionsV_tF","title":"Swift","symbolKind":"extension"},"references":{"doc://Instruments/documentation/Instruments/Swift/UInt32":{"title":"UInt32","role":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt32","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:s6UInt32V","text":"UInt32"}],"url":"\/documentation\/instruments\/swift\/uint32","kind":"symbol","abstract":[],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"UInt32"}]},"doc://Instruments/documentation/Instruments/Swift/Int16":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int16"}],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:s5Int16V","text":"Int16"}],"abstract":[],"title":"Int16","url":"\/documentation\/instruments\/swift\/int16","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int16"},"doc://Instruments/documentation/Instruments/_Concurrency":{"type":"topic","role":"collection","abstract":[],"title":"_Concurrency","url":"\/documentation\/instruments\/_concurrency","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/_Concurrency"},"doc://Instruments/documentation/Instruments/Swift/UInt16":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UInt16"}],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6UInt16V","kind":"identifier","text":"UInt16"}],"abstract":[],"title":"UInt16","url":"\/documentation\/instruments\/swift\/uint16","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt16"},"doc://Instruments/documentation/Instruments/DebounceFunctionConfiguration":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DebounceFunctionConfiguration"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DebounceFunctionConfiguration"}],"abstract":[{"type":"text","text":"A global configuration of "},{"type":"codeVoice","code":"DebounceFunction"},{"type":"text","text":"."}],"title":"DebounceFunctionConfiguration","url":"\/documentation\/instruments\/debouncefunctionconfiguration","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/DebounceFunctionConfiguration"},"doc://Instruments/documentation/Instruments/LinewiseReader":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LinewiseReader"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"LinewiseReader"}],"abstract":[],"title":"LinewiseReader","deprecated":true,"url":"\/documentation\/instruments\/linewisereader","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/LinewiseReader"},"doc://Instruments/documentation/Instruments/BytesConstructibleNumber":{"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/BytesConstructibleNumber","url":"\/documentation\/instruments\/bytesconstructiblenumber","abstract":[{"type":"text","text":"A protocol to which number should conform to be initialized from array of bytes and some"},{"type":"text","text":" "},{"type":"text","text":"endianness. The "},{"code":"Instruments","type":"codeVoice"},{"type":"text","text":" library makes all integer types to conform this protocol."}],"type":"topic","kind":"symbol","title":"BytesConstructibleNumber","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"BytesConstructibleNumber","kind":"identifier"}],"navigatorTitle":[{"text":"BytesConstructibleNumber","kind":"identifier"}]},"doc://Instruments/documentation/Instruments/Swift/UInt8":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UInt8"}],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"}],"abstract":[],"title":"UInt8","url":"\/documentation\/instruments\/swift\/uint8","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt8"},"doc://Instruments/documentation/Instruments/Swift/Int8":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int8"}],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s4Int8V","kind":"identifier","text":"Int8"}],"abstract":[],"title":"Int8","url":"\/documentation\/instruments\/swift\/int8","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int8"},"doc://Instruments/documentation/Instruments/SecureRandom":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"SecureRandom","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SecureRandom"}],"abstract":[{"type":"text","text":"An object that provides you functionality to generate bytes or numbers in a secure way."}],"title":"SecureRandom","url":"\/documentation\/instruments\/securerandom","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/SecureRandom"},"doc://Instruments/documentation/Instruments/Timer":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"Timer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timer"}],"abstract":[{"type":"text","text":"A timer that fires after a certain time interval has elapsed, invoking a specified action. Built"},{"type":"text","text":" "},{"type":"text","text":"on top of "},{"type":"codeVoice","code":"DispatchSourceTimer"},{"type":"text","text":"."}],"title":"Timer","url":"\/documentation\/instruments\/timer","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Timer"},"doc://Instruments/documentation/Instruments/Swift/Array":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Array"}],"fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:Sa","text":"Array"}],"abstract":[],"title":"Array","url":"\/documentation\/instruments\/swift\/array","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Array"},"doc://Instruments/documentation/Instruments/Swift/Int64":{"title":"Int64","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int64","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Int64","kind":"identifier","preciseIdentifier":"s:s5Int64V"}],"navigatorTitle":[{"text":"Int64","kind":"identifier"}],"abstract":[],"url":"\/documentation\/instruments\/swift\/int64"},"doc://Instruments/documentation/Instruments/Swift/String":{"navigatorTitle":[{"kind":"identifier","text":"String"}],"kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/String","type":"topic","role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"String","kind":"identifier","preciseIdentifier":"s:SS"}],"title":"String","url":"\/documentation\/instruments\/swift\/string","abstract":[]},"doc://Instruments/documentation/Instruments/WeakShared":{"kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/WeakShared","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WeakShared","kind":"identifier"}],"role":"symbol","abstract":[{"type":"codeVoice","code":"WeakShared"},{"type":"text","text":" is a property wrapper for references types that allow you to share the same"},{"type":"text","text":" "},{"text":"instance while reference exists. If there’s no reference, the new object is created.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"WeakShared"}],"url":"\/documentation\/instruments\/weakshared","type":"topic","title":"WeakShared"},"doc://Instruments/documentation/Instruments/Endianness":{"url":"\/documentation\/instruments\/endianness","abstract":[{"type":"text","text":"An order of bytes which can be either "},{"type":"codeVoice","code":"BE"},{"type":"text","text":" or "},{"type":"codeVoice","code":"LE"},{"type":"text","text":"."}],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Endianness"}],"navigatorTitle":[{"kind":"identifier","text":"Endianness"}],"title":"Endianness","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Endianness","role":"symbol"},"doc://Instruments/documentation/Instruments/Pointer":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Pointer"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pointer"}],"abstract":[{"type":"codeVoice","code":"Pointer"},{"type":"text","text":" is a property wrapper that allows you to work with classes and struct as they would be"},{"type":"text","text":" "},{"type":"text","text":"pointed in the Objective-C."}],"title":"Pointer","url":"\/documentation\/instruments\/pointer","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Pointer"},"doc://Instruments/documentation/Instruments/HexStringDataDecoderError":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HexStringDataDecoderError"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HexStringDataDecoderError"}],"abstract":[{"type":"text","text":"An error that is thrown when "},{"type":"codeVoice","code":"HexStringDataDecoder"},{"type":"text","text":" fails."}],"title":"HexStringDataDecoderError","url":"\/documentation\/instruments\/hexstringdatadecodererror","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/HexStringDataDecoderError"},"doc://Instruments/documentation/Instruments/SecureRandomError":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SecureRandomError"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SecureRandomError"}],"abstract":[{"type":"text","text":"An error that can be thrown by "},{"type":"codeVoice","code":"SecureRandom"},{"type":"text","text":" if something goes wrong."}],"title":"SecureRandomError","url":"\/documentation\/instruments\/securerandomerror","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/SecureRandomError"},"doc://Instruments/documentation/Instruments/Enum()":{"type":"topic","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Enum"},{"kind":"text","text":"<"},{"text":"RawValue","kind":"genericParameter"},{"text":">()","kind":"text"}],"abstract":[{"type":"text","text":"Defines a struct with a given raw value that is intended to be used as an enum with unknown"},{"type":"text","text":" "},{"type":"text","text":"number of cases. Generates conformances to Codable, Equatable, and RawRepresentable protocols."},{"type":"text","text":" "},{"type":"text","text":"Requieres "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" to conform to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":"."}],"title":"Enum()","url":"\/documentation\/instruments\/enum()","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Enum()"},"doc://Instruments/documentation/Instruments/Foundation":{"type":"topic","role":"collection","abstract":[],"title":"Foundation","url":"\/documentation\/instruments\/foundation","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Foundation"},"doc://Instruments/documentation/Instruments/HexStringDataDecoder":{"kind":"symbol","abstract":[{"type":"text","text":"A decoder that takes a hexadecimal string as input and returns an instance of "},{"code":"Data","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HexStringDataDecoder","kind":"identifier"}],"type":"topic","url":"\/documentation\/instruments\/hexstringdatadecoder","navigatorTitle":[{"text":"HexStringDataDecoder","kind":"identifier"}],"title":"HexStringDataDecoder","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/HexStringDataDecoder"},"doc://Instruments/documentation/Instruments/Swift/UInt":{"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt","role":"symbol","kind":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"UInt"}],"url":"\/documentation\/instruments\/swift\/uint","type":"topic","title":"UInt","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UInt","kind":"identifier","preciseIdentifier":"s:Su"}]},"doc://Instruments/documentation/Instruments/LineByLineReader":{"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/LineByLineReader","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A reader that reads file line by line by using given delimiter."}],"navigatorTitle":[{"kind":"identifier","text":"LineByLineReader"}],"type":"topic","url":"\/documentation\/instruments\/linebylinereader","title":"LineByLineReader","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LineByLineReader"}]},"doc://Instruments/documentation/Instruments":{"identifier":"doc:\/\/Instruments\/documentation\/Instruments","url":"\/documentation\/instruments","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Instruments"}]},{"type":"text","text":" is a package that provides you with set of tools that may be handy for Swift"},{"text":" ","type":"text"},{"type":"text","text":"development."}],"type":"topic","kind":"symbol","title":"Instruments","role":"collection"},"doc://Instruments/documentation/Instruments/Swift/UInt64":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UInt64"}],"fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"identifier","preciseIdentifier":"s:s6UInt64V"}],"abstract":[],"title":"UInt64","url":"\/documentation\/instruments\/swift\/uint64","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt64"},"doc://Instruments/documentation/Instruments/Swift/Int":{"url":"\/documentation\/instruments\/swift\/int","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"text":"Int","kind":"identifier","preciseIdentifier":"s:Si"}],"navigatorTitle":[{"kind":"identifier","text":"Int"}],"kind":"symbol","title":"Int","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int","role":"symbol"},"doc://Instruments/documentation/Instruments/DebounceFunction":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DebounceFunction"}],"abstract":[{"type":"text","text":"A function that allows you to debounce some work. It invokes action after a certain amount time"},{"type":"text","text":" "},{"type":"text","text":"if there’s no new calls during this time. Can be called dynamically due to "},{"type":"codeVoice","code":"@dynamicCallable"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","title":"DebounceFunction","role":"symbol","navigatorTitle":[{"text":"DebounceFunction","kind":"identifier"}],"url":"\/documentation\/instruments\/debouncefunction","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/DebounceFunction"},"doc://Instruments/documentation/Instruments/Swift":{"type":"topic","role":"collection","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift","abstract":[],"kind":"symbol","url":"\/documentation\/instruments\/swift","title":"Swift"},"doc://Instruments/documentation/Instruments/LLDB":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"LLDB","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LLDB"}],"abstract":[{"text":"Scope for functions to work with debugger.","type":"text"}],"title":"LLDB","url":"\/documentation\/instruments\/lldb","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/LLDB"},"doc://Instruments/documentation/Instruments/Swift/Int32":{"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int32","role":"symbol","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"Int32","kind":"identifier"}],"url":"\/documentation\/instruments\/swift\/int32","type":"topic","title":"Int32","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}]}}}