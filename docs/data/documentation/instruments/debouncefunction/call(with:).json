{"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"call"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"argument","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Argument","preciseIdentifier":"s:11Instruments16DebounceFunctionC8Argumentxmfp"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"Argument to pass to an action.","type":"text"}],"type":"paragraph"}],"name":"argument"}]}],"hierarchy":{"paths":[["doc:\/\/Instruments\/documentation\/Instruments","doc:\/\/Instruments\/documentation\/Instruments\/DebounceFunction"]]},"identifier":{"url":"doc:\/\/Instruments\/documentation\/Instruments\/DebounceFunction\/call(with:)","interfaceLanguage":"swift"},"abstract":[{"text":"Cancels previous call if possible and schedules new invocation of action after debounce","type":"text"},{"text":" ","type":"text"},{"text":"interval.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"externalID":"s:11Instruments16DebounceFunctionC4call4withyx_tF","role":"symbol","title":"call(with:)","modules":[{"name":"Instruments"}],"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"call"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Argument","kind":"typeIdentifier","preciseIdentifier":"s:11Instruments16DebounceFunctionC8Argumentxmfp"},{"text":")","kind":"text"}]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/instruments\/debouncefunction\/call(with:)"]}],"references":{"doc://Instruments/documentation/Instruments/DebounceFunction/call(with:)":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/DebounceFunction\/call(with:)","url":"\/documentation\/instruments\/debouncefunction\/call(with:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"call"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Instruments16DebounceFunctionC8Argumentxmfp","text":"Argument","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"text":"Cancels previous call if possible and schedules new invocation of action after debounce","type":"text"},{"type":"text","text":" "},{"text":"interval.","type":"text"}],"title":"call(with:)"},"doc://Instruments/documentation/Instruments":{"title":"Instruments","url":"\/documentation\/instruments","abstract":[{"inlineContent":[{"text":"Instruments","type":"text"}],"type":"emphasis"},{"text":" is a package that provides you with set of tools that may be handy for Swift","type":"text"},{"type":"text","text":" "},{"type":"text","text":"development."}],"kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments","role":"collection","type":"topic"},"doc://Instruments/documentation/Instruments/DebounceFunction":{"kind":"symbol","role":"symbol","type":"topic","title":"DebounceFunction","abstract":[{"text":"A function that allows you to debounce some work. It invokes action after a certain amount time","type":"text"},{"type":"text","text":" "},{"type":"text","text":"if thereâ€™s no new calls during this time. Can be called dynamically due to "},{"code":"@dynamicCallable","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/DebounceFunction","url":"\/documentation\/instruments\/debouncefunction","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DebounceFunction"}],"navigatorTitle":[{"kind":"identifier","text":"DebounceFunction"}]}}}