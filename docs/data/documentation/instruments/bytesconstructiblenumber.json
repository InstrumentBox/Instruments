{"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(bigEndian:)","doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(bytes:endianness:)","doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(data:endianness:)","doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(littleEndian:)"],"anchor":"Initializers","generated":true}],"kind":"symbol","relationshipsSections":[{"title":"Conforming Types","identifiers":["doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/Int","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/Int16","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/Int32","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/Int64","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/Int8","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/UInt","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/UInt16","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/UInt32","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/UInt64","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/UInt8"],"type":"conformingTypes","kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/instruments\/bytesconstructiblenumber"]}],"metadata":{"symbolKind":"protocol","roleHeading":"Protocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BytesConstructibleNumber"}],"title":"BytesConstructibleNumber","externalID":"s:11Instruments24BytesConstructibleNumberP","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BytesConstructibleNumber"}],"modules":[{"name":"Instruments"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/instruments.Instruments\/documentation\/Instruments"]]},"abstract":[{"type":"text","text":"A protocol to which number should conform to be initialized from array of bytes and some"},{"type":"text","text":" "},{"type":"text","text":"endianness. The "},{"type":"codeVoice","code":"Instruments"},{"text":" library makes all integer types to conform this protocol.","type":"text"}],"seeAlsoSections":[{"title":"List of Tools","anchor":"List-of-Tools","identifiers":["doc:\/\/instruments.Instruments\/documentation\/Instruments\/Endianness","doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunction","doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunctionConfiguration","doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoder","doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoderError","doc:\/\/instruments.Instruments\/documentation\/Instruments\/LLDB","doc:\/\/instruments.Instruments\/documentation\/Instruments\/WeakShared","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer","doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandom","doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandomError","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Timer","doc:\/\/instruments.Instruments\/documentation\/Instruments\/LineByLineReader","doc:\/\/instruments.Instruments\/documentation\/Instruments\/LinewiseReader","doc:\/\/instruments.Instruments\/documentation\/Instruments\/UnfairLock","doc:\/\/instruments.Instruments\/documentation\/Instruments\/DelegatePool"],"generated":true}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BytesConstructibleNumber"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://instruments.Instruments/documentation/Instruments/UnfairLock":{"abstract":[{"type":"text","text":"Low-level lock that allows waiters to block efficiently on contention."}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/UnfairLock","type":"topic","kind":"symbol","role":"symbol","title":"UnfairLock","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnfairLock"}],"url":"\/documentation\/instruments\/unfairlock","navigatorTitle":[{"text":"UnfairLock","kind":"identifier"}]},"doc://instruments.Instruments/documentation/Instruments/Swift/UInt16":{"role":"symbol","type":"topic","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/UInt16","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"UInt16","kind":"identifier"}],"title":"UInt16","kind":"symbol","url":"\/documentation\/instruments\/swift\/uint16"},"doc://instruments.Instruments/documentation/Instruments/Swift/Int":{"abstract":[],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/instruments\/swift\/int","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:Si","kind":"identifier","text":"Int"}],"type":"topic","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/Int","title":"Int","role":"symbol"},"doc://instruments.Instruments/documentation/Instruments/DebounceFunctionConfiguration":{"abstract":[{"type":"text","text":"A global configuration of "},{"code":"DebounceFunction","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunctionConfiguration","type":"topic","kind":"symbol","role":"symbol","title":"DebounceFunctionConfiguration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"DebounceFunctionConfiguration","kind":"identifier"}],"url":"\/documentation\/instruments\/debouncefunctionconfiguration","navigatorTitle":[{"text":"DebounceFunctionConfiguration","kind":"identifier"}]},"doc://instruments.Instruments/documentation/Instruments":{"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments","type":"topic","role":"collection","title":"Instruments","url":"\/documentation\/instruments","abstract":[{"inlineContent":[{"type":"text","text":"Instruments"}],"type":"emphasis"},{"type":"text","text":" is a package that provides you with set of tools that may be handy for Swift"},{"type":"text","text":" "},{"text":"development.","type":"text"}],"kind":"symbol"},"doc://instruments.Instruments/documentation/Instruments/SecureRandomError":{"navigatorTitle":[{"text":"SecureRandomError","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An error that can be thrown by "},{"type":"codeVoice","code":"SecureRandom"},{"text":" if something goes wrong.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SecureRandomError"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandomError","url":"\/documentation\/instruments\/securerandomerror","title":"SecureRandomError"},"doc://instruments.Instruments/documentation/Instruments/Swift/Int16":{"role":"symbol","abstract":[],"type":"topic","url":"\/documentation\/instruments\/swift\/int16","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int16"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/Int16","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"identifier"}],"title":"Int16"},"doc://instruments.Instruments/documentation/Instruments/HexStringDataDecoder":{"abstract":[{"text":"A decoder that takes a hexadecimal string as input and returns an instance of ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HexStringDataDecoder"}],"navigatorTitle":[{"text":"HexStringDataDecoder","kind":"identifier"}],"title":"HexStringDataDecoder","role":"symbol","url":"\/documentation\/instruments\/hexstringdatadecoder","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoder","kind":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/Endianness":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Endianness"}],"type":"topic","navigatorTitle":[{"text":"Endianness","kind":"identifier"}],"url":"\/documentation\/instruments\/endianness","abstract":[{"text":"An order of bytes which can be either ","type":"text"},{"type":"codeVoice","code":"BE"},{"type":"text","text":" or "},{"type":"codeVoice","code":"LE"},{"type":"text","text":"."}],"title":"Endianness","kind":"symbol","role":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Endianness"},"doc://instruments.Instruments/documentation/Instruments/LineByLineReader":{"abstract":[{"text":"A reader that reads file line by line by using given delimiter.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"LineByLineReader","kind":"identifier"}],"navigatorTitle":[{"text":"LineByLineReader","kind":"identifier"}],"title":"LineByLineReader","role":"symbol","url":"\/documentation\/instruments\/linebylinereader","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/LineByLineReader","kind":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/BytesConstructibleNumber/init(data:endianness:)":{"url":"\/documentation\/instruments\/bytesconstructiblenumber\/init(data:endianness:)","type":"topic","role":"symbol","abstract":[{"text":"Creates and returns a new instance of a number with a given parameters.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"data"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"endianness","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Endianness","kind":"typeIdentifier","preciseIdentifier":"s:11Instruments10EndiannessO"},{"kind":"text","text":")"}],"title":"init(data:endianness:)","required":true,"defaultImplementations":1,"kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(data:endianness:)"},"doc://instruments.Instruments/documentation/Instruments/BytesConstructibleNumber/init(bytes:endianness:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"bytes"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"endianness"},{"text":": ","kind":"text"},{"text":"Endianness","kind":"typeIdentifier","preciseIdentifier":"s:11Instruments10EndiannessO"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates and returns a new instance of a number with a given parameters."}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(bytes:endianness:)","url":"\/documentation\/instruments\/bytesconstructiblenumber\/init(bytes:endianness:)","title":"init(bytes:endianness:)"},"doc://instruments.Instruments/documentation/Instruments/Pointer":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Pointer"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pointer"}],"abstract":[{"code":"Pointer","type":"codeVoice"},{"type":"text","text":" is a property wrapper that allows you to work with classes and struct as they would be"},{"type":"text","text":" "},{"type":"text","text":"pointed in the Objective-C."}],"kind":"symbol","title":"Pointer","type":"topic","url":"\/documentation\/instruments\/pointer"},"doc://instruments.Instruments/documentation/Instruments/HexStringDataDecoderError":{"abstract":[{"type":"text","text":"An error that is thrown when "},{"type":"codeVoice","code":"HexStringDataDecoder"},{"type":"text","text":" fails."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"HexStringDataDecoderError","kind":"identifier"}],"navigatorTitle":[{"text":"HexStringDataDecoderError","kind":"identifier"}],"title":"HexStringDataDecoderError","role":"symbol","url":"\/documentation\/instruments\/hexstringdatadecodererror","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoderError","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/DelegatePool":{"title":"DelegatePool","role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DelegatePool"}],"abstract":[{"text":"An object that stores delegates in an array by using weak references to delegate. Each time you","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iterate through delegates, it removes "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" references from the array. Class is designed to be"},{"type":"text","text":" "},{"type":"text","text":"thread safe."}],"type":"topic","url":"\/documentation\/instruments\/delegatepool","navigatorTitle":[{"text":"DelegatePool","kind":"identifier"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/DelegatePool"},"doc://instruments.Instruments/documentation/Instruments/Swift/Int32":{"abstract":[],"type":"topic","url":"\/documentation\/instruments\/swift\/int32","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"identifier","text":"Int32"}],"navigatorTitle":[{"text":"Int32","kind":"identifier"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/Int32","title":"Int32","kind":"symbol","role":"symbol"},"doc://instruments.Instruments/documentation/Instruments/Swift/Int64":{"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/Int64","url":"\/documentation\/instruments\/swift\/int64","role":"symbol","type":"topic","abstract":[],"kind":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Int64","kind":"identifier","preciseIdentifier":"s:s5Int64V"}],"navigatorTitle":[{"text":"Int64","kind":"identifier"}],"title":"Int64"},"doc://instruments.Instruments/documentation/Instruments/BytesConstructibleNumber/init(littleEndian:)":{"abstract":[{"text":"Creates a number from its little-endian representation, changing the byte order if","type":"text"},{"type":"text","text":" "},{"type":"text","text":"necessary."}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"littleEndian","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(littleEndian:)","role":"symbol","required":true,"url":"\/documentation\/instruments\/bytesconstructiblenumber\/init(littleendian:)","kind":"symbol","type":"topic","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(littleEndian:)"},"doc://instruments.Instruments/documentation/Instruments/Swift/UInt32":{"navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"title":"UInt32","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/UInt32","url":"\/documentation\/instruments\/swift\/uint32","type":"topic","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"}],"role":"symbol","kind":"symbol","abstract":[]},"doc://instruments.Instruments/documentation/Instruments/LinewiseReader":{"abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LinewiseReader","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LinewiseReader"}],"title":"LinewiseReader","deprecated":true,"role":"symbol","url":"\/documentation\/instruments\/linewisereader","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/LinewiseReader","kind":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/Swift/UInt8":{"title":"UInt8","url":"\/documentation\/instruments\/swift\/uint8","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UInt8"}],"type":"topic","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/UInt8","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"identifier"}],"kind":"symbol"},"doc://instruments.Instruments/documentation/Instruments/DebounceFunction":{"role":"symbol","navigatorTitle":[{"text":"DebounceFunction","kind":"identifier"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunction","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebounceFunction"}],"abstract":[{"type":"text","text":"A function that allows you to debounce some work. It invokes action after a certain amount time"},{"type":"text","text":" "},{"type":"text","text":"if there’s no new calls during this time. Can be called dynamically due to "},{"type":"codeVoice","code":"@dynamicCallable"},{"text":".","type":"text"}],"kind":"symbol","title":"DebounceFunction","type":"topic","url":"\/documentation\/instruments\/debouncefunction"},"doc://instruments.Instruments/documentation/Instruments/Swift/UInt":{"type":"topic","role":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/UInt","title":"UInt","kind":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","preciseIdentifier":"s:Su","text":"UInt"}],"navigatorTitle":[{"text":"UInt","kind":"identifier"}],"abstract":[],"url":"\/documentation\/instruments\/swift\/uint"},"doc://instruments.Instruments/documentation/Instruments/Swift/UInt64":{"kind":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt64","kind":"identifier","preciseIdentifier":"s:s6UInt64V"}],"type":"topic","role":"symbol","title":"UInt64","abstract":[],"navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/UInt64","url":"\/documentation\/instruments\/swift\/uint64"},"doc://instruments.Instruments/documentation/Instruments/SecureRandom":{"navigatorTitle":[{"kind":"identifier","text":"SecureRandom"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"An object that provides you functionality to generate bytes or numbers in a secure way."}],"url":"\/documentation\/instruments\/securerandom","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandom","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SecureRandom","kind":"identifier"}],"title":"SecureRandom"},"doc://instruments.Instruments/documentation/Instruments/WeakShared":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakShared"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"WeakShared"}],"url":"\/documentation\/instruments\/weakshared","abstract":[{"type":"codeVoice","code":"WeakShared"},{"type":"text","text":" is a property wrapper for references types that allow you to share the same"},{"type":"text","text":" "},{"type":"text","text":"instance while reference exists. If there’s no reference, the new object is created."}],"title":"WeakShared","kind":"symbol","role":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/WeakShared"},"doc://instruments.Instruments/documentation/Instruments/Timer":{"kind":"symbol","url":"\/documentation\/instruments\/timer","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Timer","navigatorTitle":[{"text":"Timer","kind":"identifier"}],"abstract":[{"text":"A timer that fires after a certain time interval has elapsed, invoking a specified action. Built","type":"text"},{"type":"text","text":" "},{"type":"text","text":"on top of "},{"code":"DispatchSourceTimer","type":"codeVoice"},{"type":"text","text":"."}],"title":"Timer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Timer","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/BytesConstructibleNumber/init(bigEndian:)":{"abstract":[{"text":"Creates a number from its big-endian representation, changing the byte order if","type":"text"},{"type":"text","text":" "},{"type":"text","text":"necessary."}],"required":true,"title":"init(bigEndian:)","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(bigEndian:)","type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"bigEndian","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/instruments\/bytesconstructiblenumber\/init(bigendian:)"},"doc://instruments.Instruments/documentation/Instruments/LLDB":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"LLDB","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LLDB"}],"url":"\/documentation\/instruments\/lldb","abstract":[{"type":"text","text":"Scope for functions to work with debugger."}],"title":"LLDB","kind":"symbol","role":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/LLDB"},"doc://instruments.Instruments/documentation/Instruments/BytesConstructibleNumber":{"abstract":[{"type":"text","text":"A protocol to which number should conform to be initialized from array of bytes and some"},{"text":" ","type":"text"},{"type":"text","text":"endianness. The "},{"type":"codeVoice","code":"Instruments"},{"type":"text","text":" library makes all integer types to conform this protocol."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BytesConstructibleNumber","kind":"identifier"}],"navigatorTitle":[{"text":"BytesConstructibleNumber","kind":"identifier"}],"title":"BytesConstructibleNumber","role":"symbol","url":"\/documentation\/instruments\/bytesconstructiblenumber","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/Swift/Int8":{"abstract":[],"type":"topic","url":"\/documentation\/instruments\/swift\/int8","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"Int8","kind":"identifier","preciseIdentifier":"s:s4Int8V"}],"navigatorTitle":[{"kind":"identifier","text":"Int8"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/Int8","title":"Int8","kind":"symbol","role":"symbol"}}}