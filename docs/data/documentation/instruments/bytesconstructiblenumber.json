{"sections":[],"relationshipsSections":[{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int16","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int32","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int64","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int8","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt16","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt32","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt64","doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt8"],"type":"conformingTypes"}],"seeAlsoSections":[{"generated":true,"title":"List of Tools","identifiers":["doc:\/\/Instruments\/documentation\/Instruments\/Endianness","doc:\/\/Instruments\/documentation\/Instruments\/DebounceFunction","doc:\/\/Instruments\/documentation\/Instruments\/DebounceFunctionConfiguration","doc:\/\/Instruments\/documentation\/Instruments\/HexStringDataDecoder","doc:\/\/Instruments\/documentation\/Instruments\/HexStringDataDecoderError","doc:\/\/Instruments\/documentation\/Instruments\/LLDB","doc:\/\/Instruments\/documentation\/Instruments\/WeakShared","doc:\/\/Instruments\/documentation\/Instruments\/Pointer","doc:\/\/Instruments\/documentation\/Instruments\/SecureRandom","doc:\/\/Instruments\/documentation\/Instruments\/SecureRandomError","doc:\/\/Instruments\/documentation\/Instruments\/Timer","doc:\/\/Instruments\/documentation\/Instruments\/LineByLineReader","doc:\/\/Instruments\/documentation\/Instruments\/LinewiseReader","doc:\/\/Instruments\/documentation\/Instruments\/Enum()","doc:\/\/Instruments\/documentation\/Instruments\/Foundation","doc:\/\/Instruments\/documentation\/Instruments\/Swift","doc:\/\/Instruments\/documentation\/Instruments\/_Concurrency"]}],"kind":"symbol","variants":[{"paths":["\/documentation\/instruments\/bytesconstructiblenumber"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","roleHeading":"Protocol","symbolKind":"protocol","modules":[{"name":"Instruments"}],"navigatorTitle":[{"text":"BytesConstructibleNumber","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BytesConstructibleNumber"}],"title":"BytesConstructibleNumber","externalID":"s:11Instruments24BytesConstructibleNumberP"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BytesConstructibleNumber"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Instruments\/documentation\/Instruments\/BytesConstructibleNumber"},"hierarchy":{"paths":[["doc:\/\/Instruments\/documentation\/Instruments"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(bigEndian:)","doc:\/\/Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(bytes:endianness:)","doc:\/\/Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(data:endianness:)-8ub7m","doc:\/\/Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(littleEndian:)"]}],"abstract":[{"text":"A protocol to which number should conform to be initialized from array of bytes and some","type":"text"},{"type":"text","text":" "},{"type":"text","text":"endianness. The "},{"code":"Instruments","type":"codeVoice"},{"type":"text","text":" library makes all integer types to conform this protocol."}],"references":{"doc://Instruments/documentation/Instruments/WeakShared":{"type":"topic","title":"WeakShared","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"WeakShared","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/instruments\/weakshared","navigatorTitle":[{"kind":"identifier","text":"WeakShared"}],"abstract":[{"code":"WeakShared","type":"codeVoice"},{"type":"text","text":" is a property wrapper for references types that allow you to share the same"},{"type":"text","text":" "},{"text":"instance while reference exists. If thereâ€™s no reference, the new object is created.","type":"text"}],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/WeakShared"},"doc://Instruments/documentation/Instruments/Swift/Int16":{"url":"\/documentation\/instruments\/swift\/int16","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int16","preciseIdentifier":"s:s5Int16V"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Int16"}],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int16","title":"Int16"},"doc://Instruments/documentation/Instruments/LLDB":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LLDB"}],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/LLDB","url":"\/documentation\/instruments\/lldb","abstract":[{"type":"text","text":"Scope for functions to work with debugger."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LLDB"}],"title":"LLDB","kind":"symbol"},"doc://Instruments/documentation/Instruments/SecureRandomError":{"type":"topic","title":"SecureRandomError","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SecureRandomError","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/instruments\/securerandomerror","navigatorTitle":[{"text":"SecureRandomError","kind":"identifier"}],"abstract":[{"text":"An error that can be thrown by ","type":"text"},{"type":"codeVoice","code":"SecureRandom"},{"type":"text","text":" if something goes wrong."}],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/SecureRandomError"},"doc://Instruments/documentation/Instruments/LinewiseReader":{"kind":"symbol","role":"symbol","deprecated":true,"type":"topic","title":"LinewiseReader","abstract":[],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/LinewiseReader","url":"\/documentation\/instruments\/linewisereader","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LinewiseReader","kind":"identifier"}],"navigatorTitle":[{"text":"LinewiseReader","kind":"identifier"}]},"doc://Instruments/documentation/Instruments/BytesConstructibleNumber/init(bigEndian:)":{"type":"topic","url":"\/documentation\/instruments\/bytesconstructiblenumber\/init(bigendian:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"bigEndian"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"title":"init(bigEndian:)","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(bigEndian:)","required":true,"abstract":[{"text":"Creates a number from its big-endian representation, changing the byte order if","type":"text"},{"text":" ","type":"text"},{"text":"necessary.","type":"text"}],"role":"symbol"},"doc://Instruments/documentation/Instruments":{"title":"Instruments","url":"\/documentation\/instruments","abstract":[{"inlineContent":[{"text":"Instruments","type":"text"}],"type":"emphasis"},{"text":" is a package that provides you with set of tools that may be handy for Swift","type":"text"},{"type":"text","text":" "},{"type":"text","text":"development."}],"kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments","role":"collection","type":"topic"},"doc://Instruments/documentation/Instruments/Swift":{"abstract":[],"type":"topic","title":"Swift","url":"\/documentation\/instruments\/swift","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift","kind":"symbol","role":"collection"},"doc://Instruments/documentation/Instruments/Pointer":{"type":"topic","title":"Pointer","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Pointer","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/instruments\/pointer","navigatorTitle":[{"kind":"identifier","text":"Pointer"}],"abstract":[{"code":"Pointer","type":"codeVoice"},{"type":"text","text":" is a property wrapper that allows you to work with classes and struct as they would be"},{"type":"text","text":" "},{"text":"pointed in the Objective-C.","type":"text"}],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Pointer"},"doc://Instruments/documentation/Instruments/Swift/UInt32":{"url":"\/documentation\/instruments\/swift\/uint32","abstract":[],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt32","kind":"symbol","role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"}],"navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"type":"topic","title":"UInt32"},"doc://Instruments/documentation/Instruments/Endianness":{"navigatorTitle":[{"text":"Endianness","kind":"identifier"}],"role":"symbol","url":"\/documentation\/instruments\/endianness","title":"Endianness","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Endianness"}],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Endianness","abstract":[{"text":"An order of bytes which can be either ","type":"text"},{"code":"BE","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"LE","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","kind":"symbol"},"doc://Instruments/documentation/Instruments/Timer":{"kind":"symbol","title":"Timer","navigatorTitle":[{"kind":"identifier","text":"Timer"}],"abstract":[{"type":"text","text":"A timer that fires after a certain time interval has elapsed, invoking a specified action. Built"},{"type":"text","text":" "},{"text":"on top of ","type":"text"},{"code":"DispatchSourceTimer","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Timer","kind":"identifier"}],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Timer","url":"\/documentation\/instruments\/timer"},"doc://Instruments/documentation/Instruments/Swift/Int32":{"url":"\/documentation\/instruments\/swift\/int32","abstract":[],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int32","kind":"symbol","role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","preciseIdentifier":"s:s5Int32V","text":"Int32"}],"navigatorTitle":[{"kind":"identifier","text":"Int32"}],"type":"topic","title":"Int32"},"doc://Instruments/documentation/Instruments/BytesConstructibleNumber/init(littleEndian:)":{"required":true,"kind":"symbol","abstract":[{"text":"Creates a number from its little-endian representation, changing the byte order if","type":"text"},{"type":"text","text":" "},{"type":"text","text":"necessary."}],"url":"\/documentation\/instruments\/bytesconstructiblenumber\/init(littleendian:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"littleEndian"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(littleEndian:)","role":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(littleEndian:)"},"doc://Instruments/documentation/Instruments/Swift/Int8":{"abstract":[],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int8","type":"topic","kind":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:s4Int8V","text":"Int8"}],"url":"\/documentation\/instruments\/swift\/int8","title":"Int8","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int8"}]},"doc://Instruments/documentation/Instruments/HexStringDataDecoder":{"kind":"symbol","role":"symbol","type":"topic","title":"HexStringDataDecoder","abstract":[{"text":"A decoder that takes a hexadecimal string as input and returns an instance of ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/HexStringDataDecoder","url":"\/documentation\/instruments\/hexstringdatadecoder","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HexStringDataDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"HexStringDataDecoder","kind":"identifier"}]},"doc://Instruments/documentation/Instruments/_Concurrency":{"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/_Concurrency","role":"collection","kind":"symbol","url":"\/documentation\/instruments\/_concurrency","title":"_Concurrency","type":"topic","abstract":[]},"doc://Instruments/documentation/Instruments/DebounceFunctionConfiguration":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebounceFunctionConfiguration"}],"navigatorTitle":[{"kind":"identifier","text":"DebounceFunctionConfiguration"}],"url":"\/documentation\/instruments\/debouncefunctionconfiguration","role":"symbol","title":"DebounceFunctionConfiguration","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/DebounceFunctionConfiguration","type":"topic","abstract":[{"type":"text","text":"A global configuration of "},{"code":"DebounceFunction","type":"codeVoice"},{"text":".","type":"text"}]},"doc://Instruments/documentation/Instruments/SecureRandom":{"kind":"symbol","role":"symbol","type":"topic","title":"SecureRandom","abstract":[{"text":"An object that provides you functionality to generate bytes or numbers in a secure way.","type":"text"}],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/SecureRandom","url":"\/documentation\/instruments\/securerandom","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SecureRandom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SecureRandom"}]},"doc://Instruments/documentation/Instruments/Swift/UInt8":{"url":"\/documentation\/instruments\/swift\/uint8","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt8","type":"topic","abstract":[],"role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"}],"title":"UInt8","navigatorTitle":[{"text":"UInt8","kind":"identifier"}]},"doc://Instruments/documentation/Instruments/HexStringDataDecoderError":{"title":"HexStringDataDecoderError","navigatorTitle":[{"text":"HexStringDataDecoderError","kind":"identifier"}],"url":"\/documentation\/instruments\/hexstringdatadecodererror","abstract":[{"type":"text","text":"An error that is thrown when "},{"type":"codeVoice","code":"HexStringDataDecoder"},{"text":" fails.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/HexStringDataDecoderError","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HexStringDataDecoderError"}],"type":"topic"},"doc://Instruments/documentation/Instruments/BytesConstructibleNumber":{"abstract":[{"type":"text","text":"A protocol to which number should conform to be initialized from array of bytes and some"},{"type":"text","text":" "},{"text":"endianness. The ","type":"text"},{"code":"Instruments","type":"codeVoice"},{"type":"text","text":" library makes all integer types to conform this protocol."}],"title":"BytesConstructibleNumber","url":"\/documentation\/instruments\/bytesconstructiblenumber","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BytesConstructibleNumber"}],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/BytesConstructibleNumber","navigatorTitle":[{"kind":"identifier","text":"BytesConstructibleNumber"}],"type":"topic"},"doc://Instruments/documentation/Instruments/Swift/Int":{"abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"Int","kind":"identifier","preciseIdentifier":"s:Si"}],"url":"\/documentation\/instruments\/swift\/int","title":"Int","navigatorTitle":[{"text":"Int","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int"},"doc://Instruments/documentation/Instruments/Swift/UInt64":{"url":"\/documentation\/instruments\/swift\/uint64","type":"topic","navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"text":"UInt64","kind":"identifier","preciseIdentifier":"s:s6UInt64V"}],"kind":"symbol","title":"UInt64","role":"symbol","abstract":[],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt64"},"doc://Instruments/documentation/Instruments/BytesConstructibleNumber/init(data:endianness:)-8ub7m":{"url":"\/documentation\/instruments\/bytesconstructiblenumber\/init(data:endianness:)-8ub7m","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":", "},{"text":"endianness","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Endianness","preciseIdentifier":"s:11Instruments10EndiannessO"},{"text":")","kind":"text"}],"required":true,"title":"init(data:endianness:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(data:endianness:)-8ub7m","defaultImplementations":1,"abstract":[{"text":"Creates and returns a new instance of a number with a given parameters.","type":"text"}]},"doc://Instruments/documentation/Instruments/Enum()":{"url":"\/documentation\/instruments\/enum()","abstract":[{"type":"text","text":"Defines a struct with a given raw value that is intended to be used as an enum with unknown"},{"type":"text","text":" "},{"type":"text","text":"number of cases. Generates conformances to Codable, Equatable, and RawRepresentable protocols."},{"type":"text","text":" "},{"type":"text","text":"Requieres "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" to conform to "},{"type":"codeVoice","code":"Equatable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":".","type":"text"}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Enum","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"RawValue"},{"kind":"text","text":">()"}],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Enum()","kind":"symbol","type":"topic","title":"Enum()","role":"symbol"},"doc://Instruments/documentation/Instruments/Swift/UInt16":{"url":"\/documentation\/instruments\/swift\/uint16","type":"topic","navigatorTitle":[{"text":"UInt16","kind":"identifier"}],"fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"}],"kind":"symbol","title":"UInt16","role":"symbol","abstract":[],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt16"},"doc://Instruments/documentation/Instruments/BytesConstructibleNumber/init(bytes:endianness:)":{"abstract":[{"type":"text","text":"Creates and returns a new instance of a number with a given parameters."}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"bytes"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"text":"], ","kind":"text"},{"text":"endianness","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Instruments10EndiannessO","kind":"typeIdentifier","text":"Endianness"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/BytesConstructibleNumber\/init(bytes:endianness:)","url":"\/documentation\/instruments\/bytesconstructiblenumber\/init(bytes:endianness:)","role":"symbol","title":"init(bytes:endianness:)","type":"topic"},"doc://Instruments/documentation/Instruments/DebounceFunction":{"kind":"symbol","role":"symbol","type":"topic","title":"DebounceFunction","abstract":[{"text":"A function that allows you to debounce some work. It invokes action after a certain amount time","type":"text"},{"type":"text","text":" "},{"type":"text","text":"if thereâ€™s no new calls during this time. Can be called dynamically due to "},{"code":"@dynamicCallable","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/DebounceFunction","url":"\/documentation\/instruments\/debouncefunction","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DebounceFunction"}],"navigatorTitle":[{"kind":"identifier","text":"DebounceFunction"}]},"doc://Instruments/documentation/Instruments/Swift/Int64":{"abstract":[],"navigatorTitle":[{"text":"Int64","kind":"identifier"}],"fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"Int64","kind":"identifier","preciseIdentifier":"s:s5Int64V"}],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/Int64","url":"\/documentation\/instruments\/swift\/int64","type":"topic","title":"Int64","role":"symbol","kind":"symbol"},"doc://Instruments/documentation/Instruments/Swift/UInt":{"url":"\/documentation\/instruments\/swift\/uint","abstract":[],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"UInt","preciseIdentifier":"s:Su"}],"navigatorTitle":[{"kind":"identifier","text":"UInt"}],"role":"symbol","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Swift\/UInt","title":"UInt"},"doc://Instruments/documentation/Instruments/LineByLineReader":{"kind":"symbol","title":"LineByLineReader","url":"\/documentation\/instruments\/linebylinereader","abstract":[{"text":"A reader that reads file line by line by using given delimiter.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Instruments\/documentation\/Instruments\/LineByLineReader","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LineByLineReader"}],"navigatorTitle":[{"text":"LineByLineReader","kind":"identifier"}]},"doc://Instruments/documentation/Instruments/Foundation":{"type":"topic","title":"Foundation","kind":"symbol","role":"collection","url":"\/documentation\/instruments\/foundation","abstract":[],"identifier":"doc:\/\/Instruments\/documentation\/Instruments\/Foundation"}}}