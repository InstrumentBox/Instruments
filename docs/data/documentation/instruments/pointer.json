{"sections":[],"topicSections":[{"identifiers":["doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer\/init(wrappedValue:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"anchor":"Instance-Properties","title":"Instance Properties","generated":true,"identifiers":["doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer\/pointee","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer\/projectedValue","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer\/wrappedValue"]}],"relationshipsSections":[{"identifiers":["doc:\/\/instruments.Instruments\/s8SendableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Pointer"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Pointee"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s may be used when you need to create or update reference to a value in some other class."},{"text":" ","type":"text"},{"type":"text","text":"Let’s take a look at following example:"}]},{"code":["class A {","   @Pointer","   private var b: B?","","   init(b: Pointer<B?>) {","      _b = b","   }","","   func update() {","      b = B()","   }","}","","class C {","   @Pointer","   private var b: B?","","   func use() {","      let a = A(b: $b)","      a.update()","      \/\/ b now is B() created in class A.","   }","}"],"type":"codeListing","syntax":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/instruments.Instruments\/documentation\/Instruments"]]},"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Pointer","kind":"identifier"}],"symbolKind":"class","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"Pointer"}],"title":"Pointer","role":"symbol","modules":[{"name":"Instruments"}],"externalID":"s:11Instruments7PointerC"},"kind":"symbol","identifier":{"url":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/instruments\/pointer"]}],"abstract":[{"type":"codeVoice","code":"Pointer"},{"type":"text","text":" is a property wrapper that allows you to work with classes and struct as they would be"},{"type":"text","text":" "},{"type":"text","text":"pointed in the Objective-C."}],"seeAlsoSections":[{"title":"List of Tools","generated":true,"identifiers":["doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Endianness","doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunction","doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunctionConfiguration","doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoder","doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoderError","doc:\/\/instruments.Instruments\/documentation\/Instruments\/LLDB","doc:\/\/instruments.Instruments\/documentation\/Instruments\/WeakShared","doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandom","doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandomError","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Timer","doc:\/\/instruments.Instruments\/documentation\/Instruments\/LineByLineReader","doc:\/\/instruments.Instruments\/documentation\/Instruments\/LinewiseReader","doc:\/\/instruments.Instruments\/documentation\/Instruments\/UnfairLock","doc:\/\/instruments.Instruments\/documentation\/Instruments\/DelegatePool"],"anchor":"List-of-Tools"}],"references":{"doc://instruments.Instruments/documentation/Instruments/Timer":{"kind":"symbol","url":"\/documentation\/instruments\/timer","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Timer","navigatorTitle":[{"text":"Timer","kind":"identifier"}],"abstract":[{"text":"A timer that fires after a certain time interval has elapsed, invoking a specified action. Built","type":"text"},{"type":"text","text":" "},{"type":"text","text":"on top of "},{"code":"DispatchSourceTimer","type":"codeVoice"},{"type":"text","text":"."}],"title":"Timer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Timer","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/WeakShared":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakShared"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"WeakShared"}],"url":"\/documentation\/instruments\/weakshared","abstract":[{"type":"codeVoice","code":"WeakShared"},{"type":"text","text":" is a property wrapper for references types that allow you to share the same"},{"type":"text","text":" "},{"type":"text","text":"instance while reference exists. If there’s no reference, the new object is created."}],"title":"WeakShared","kind":"symbol","role":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/WeakShared"},"doc://instruments.Instruments/documentation/Instruments/SecureRandomError":{"navigatorTitle":[{"text":"SecureRandomError","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An error that can be thrown by "},{"type":"codeVoice","code":"SecureRandom"},{"text":" if something goes wrong.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SecureRandomError"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandomError","url":"\/documentation\/instruments\/securerandomerror","title":"SecureRandomError"},"doc://instruments.Instruments/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/instruments.Instruments\/s8SendableP"},"doc://instruments.Instruments/documentation/Instruments/LineByLineReader":{"abstract":[{"text":"A reader that reads file line by line by using given delimiter.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"LineByLineReader","kind":"identifier"}],"navigatorTitle":[{"text":"LineByLineReader","kind":"identifier"}],"title":"LineByLineReader","role":"symbol","url":"\/documentation\/instruments\/linebylinereader","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/LineByLineReader","kind":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/LinewiseReader":{"abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LinewiseReader","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LinewiseReader"}],"title":"LinewiseReader","deprecated":true,"role":"symbol","url":"\/documentation\/instruments\/linewisereader","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/LinewiseReader","kind":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/DebounceFunction":{"role":"symbol","navigatorTitle":[{"text":"DebounceFunction","kind":"identifier"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunction","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebounceFunction"}],"abstract":[{"type":"text","text":"A function that allows you to debounce some work. It invokes action after a certain amount time"},{"type":"text","text":" "},{"type":"text","text":"if there’s no new calls during this time. Can be called dynamically due to "},{"type":"codeVoice","code":"@dynamicCallable"},{"text":".","type":"text"}],"kind":"symbol","title":"DebounceFunction","type":"topic","url":"\/documentation\/instruments\/debouncefunction"},"doc://instruments.Instruments/documentation/Instruments/Endianness":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Endianness"}],"type":"topic","navigatorTitle":[{"text":"Endianness","kind":"identifier"}],"url":"\/documentation\/instruments\/endianness","abstract":[{"text":"An order of bytes which can be either ","type":"text"},{"type":"codeVoice","code":"BE"},{"type":"text","text":" or "},{"type":"codeVoice","code":"LE"},{"type":"text","text":"."}],"title":"Endianness","kind":"symbol","role":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Endianness"},"doc://instruments.Instruments/documentation/Instruments/SecureRandom":{"navigatorTitle":[{"kind":"identifier","text":"SecureRandom"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"An object that provides you functionality to generate bytes or numbers in a secure way."}],"url":"\/documentation\/instruments\/securerandom","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandom","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SecureRandom","kind":"identifier"}],"title":"SecureRandom"},"doc://instruments.Instruments/documentation/Instruments/Pointer/pointee":{"title":"pointee","abstract":[{"type":"text","text":"Existing instance of pointee."}],"kind":"symbol","url":"\/documentation\/instruments\/pointer\/pointee","role":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer\/pointee","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"pointee","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Instruments7PointerC7Pointeexmfp","kind":"typeIdentifier","text":"Pointee"}],"type":"topic"},"doc://instruments.Instruments/documentation/Instruments/Pointer/projectedValue":{"role":"symbol","title":"projectedValue","abstract":[{"type":"text","text":"Returns self to be used as pointer. It’s something like taking address using ampersand in the"},{"text":" ","type":"text"},{"type":"text","text":"Objective-C."}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer\/projectedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Pointer","preciseIdentifier":"s:11Instruments7PointerC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Instruments7PointerC7Pointeexmfp","text":"Pointee"},{"kind":"text","text":">"}],"kind":"symbol","url":"\/documentation\/instruments\/pointer\/projectedvalue","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/DebounceFunctionConfiguration":{"abstract":[{"type":"text","text":"A global configuration of "},{"code":"DebounceFunction","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunctionConfiguration","type":"topic","kind":"symbol","role":"symbol","title":"DebounceFunctionConfiguration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"DebounceFunctionConfiguration","kind":"identifier"}],"url":"\/documentation\/instruments\/debouncefunctionconfiguration","navigatorTitle":[{"text":"DebounceFunctionConfiguration","kind":"identifier"}]},"doc://instruments.Instruments/documentation/Instruments/LLDB":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"LLDB","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LLDB"}],"url":"\/documentation\/instruments\/lldb","abstract":[{"type":"text","text":"Scope for functions to work with debugger."}],"title":"LLDB","kind":"symbol","role":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/LLDB"},"doc://instruments.Instruments/documentation/Instruments/BytesConstructibleNumber":{"abstract":[{"type":"text","text":"A protocol to which number should conform to be initialized from array of bytes and some"},{"text":" ","type":"text"},{"type":"text","text":"endianness. The "},{"type":"codeVoice","code":"Instruments"},{"type":"text","text":" library makes all integer types to conform this protocol."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BytesConstructibleNumber","kind":"identifier"}],"navigatorTitle":[{"text":"BytesConstructibleNumber","kind":"identifier"}],"title":"BytesConstructibleNumber","role":"symbol","url":"\/documentation\/instruments\/bytesconstructiblenumber","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/UnfairLock":{"abstract":[{"type":"text","text":"Low-level lock that allows waiters to block efficiently on contention."}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/UnfairLock","type":"topic","kind":"symbol","role":"symbol","title":"UnfairLock","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnfairLock"}],"url":"\/documentation\/instruments\/unfairlock","navigatorTitle":[{"text":"UnfairLock","kind":"identifier"}]},"doc://instruments.Instruments/documentation/Instruments":{"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments","type":"topic","role":"collection","title":"Instruments","url":"\/documentation\/instruments","abstract":[{"inlineContent":[{"type":"text","text":"Instruments"}],"type":"emphasis"},{"type":"text","text":" is a package that provides you with set of tools that may be handy for Swift"},{"type":"text","text":" "},{"text":"development.","type":"text"}],"kind":"symbol"},"doc://instruments.Instruments/documentation/Instruments/DelegatePool":{"title":"DelegatePool","role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DelegatePool"}],"abstract":[{"text":"An object that stores delegates in an array by using weak references to delegate. Each time you","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iterate through delegates, it removes "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" references from the array. Class is designed to be"},{"type":"text","text":" "},{"type":"text","text":"thread safe."}],"type":"topic","url":"\/documentation\/instruments\/delegatepool","navigatorTitle":[{"text":"DelegatePool","kind":"identifier"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/DelegatePool"},"doc://instruments.Instruments/documentation/Instruments/HexStringDataDecoderError":{"abstract":[{"type":"text","text":"An error that is thrown when "},{"type":"codeVoice","code":"HexStringDataDecoder"},{"type":"text","text":" fails."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"HexStringDataDecoderError","kind":"identifier"}],"navigatorTitle":[{"text":"HexStringDataDecoderError","kind":"identifier"}],"title":"HexStringDataDecoderError","role":"symbol","url":"\/documentation\/instruments\/hexstringdatadecodererror","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoderError","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/Pointer":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Pointer"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pointer"}],"abstract":[{"code":"Pointer","type":"codeVoice"},{"type":"text","text":" is a property wrapper that allows you to work with classes and struct as they would be"},{"type":"text","text":" "},{"type":"text","text":"pointed in the Objective-C."}],"kind":"symbol","title":"Pointer","type":"topic","url":"\/documentation\/instruments\/pointer"},"doc://instruments.Instruments/documentation/Instruments/Pointer/init(wrappedValue:)":{"kind":"symbol","abstract":[{"type":"text","text":"Creates and returns new instance of "},{"type":"codeVoice","code":"Pointer"},{"text":" property wrapper with a given initial value.","type":"text"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer\/init(wrappedValue:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Instruments7PointerC7Pointeexmfp","text":"Pointee"},{"kind":"text","text":")"}],"title":"init(wrappedValue:)","type":"topic","url":"\/documentation\/instruments\/pointer\/init(wrappedvalue:)"},"doc://instruments.Instruments/documentation/Instruments/HexStringDataDecoder":{"abstract":[{"text":"A decoder that takes a hexadecimal string as input and returns an instance of ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HexStringDataDecoder"}],"navigatorTitle":[{"text":"HexStringDataDecoder","kind":"identifier"}],"title":"HexStringDataDecoder","role":"symbol","url":"\/documentation\/instruments\/hexstringdatadecoder","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoder","kind":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/Pointer/wrappedValue":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Pointee","kind":"typeIdentifier","preciseIdentifier":"s:11Instruments7PointerC7Pointeexmfp"}],"url":"\/documentation\/instruments\/pointer\/wrappedvalue","title":"wrappedValue","abstract":[{"type":"text","text":"Accessor and mutator of property wrapper that allows you work with "},{"type":"codeVoice","code":"pointee"},{"text":" directly without","type":"text"},{"type":"text","text":" "},{"type":"text","text":"typing "},{"code":".pointee","type":"codeVoice"},{"type":"text","text":" each time you need to access pointer’s value."}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer\/wrappedValue"}}}