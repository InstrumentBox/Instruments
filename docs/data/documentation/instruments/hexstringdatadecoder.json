{"sections":[],"identifier":{"url":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoder","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/instruments\/hexstringdatadecoder"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HexStringDataDecoder","kind":"identifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Decoder assumes that each byte is represented as two symbols. For example if you","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"have a byte with a value of 1, it "},{"inlineContent":[{"type":"text","text":"MUST"}],"type":"strong"},{"type":"text","text":" be written as "},{"type":"codeVoice","code":"01"},{"text":".","type":"text"}]}]}],"metadata":{"navigatorTitle":[{"text":"HexStringDataDecoder","kind":"identifier"}],"title":"HexStringDataDecoder","externalID":"s:11Instruments20HexStringDataDecoderV","role":"symbol","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HexStringDataDecoder"}],"roleHeading":"Structure","modules":[{"name":"Instruments"}]},"abstract":[{"type":"text","text":"A decoder that takes a hexadecimal string as input and returns an instance of "},{"code":"Data","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/instruments.Instruments\/documentation\/Instruments"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoder\/init()"],"anchor":"Initializers"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoder\/decode(_:)"],"generated":true,"title":"Instance Methods"}],"seeAlsoSections":[{"title":"List of Tools","identifiers":["doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Endianness","doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunction","doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunctionConfiguration","doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoderError","doc:\/\/instruments.Instruments\/documentation\/Instruments\/LLDB","doc:\/\/instruments.Instruments\/documentation\/Instruments\/WeakShared","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer","doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandom","doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandomError","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Timer","doc:\/\/instruments.Instruments\/documentation\/Instruments\/LineByLineReader","doc:\/\/instruments.Instruments\/documentation\/Instruments\/LinewiseReader","doc:\/\/instruments.Instruments\/documentation\/Instruments\/UnfairLock","doc:\/\/instruments.Instruments\/documentation\/Instruments\/DelegatePool"],"generated":true,"anchor":"List-of-Tools"}],"references":{"doc://instruments.Instruments/documentation/Instruments/UnfairLock":{"abstract":[{"type":"text","text":"Low-level lock that allows waiters to block efficiently on contention."}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/UnfairLock","type":"topic","kind":"symbol","role":"symbol","title":"UnfairLock","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnfairLock"}],"url":"\/documentation\/instruments\/unfairlock","navigatorTitle":[{"text":"UnfairLock","kind":"identifier"}]},"doc://instruments.Instruments/documentation/Instruments/BytesConstructibleNumber":{"abstract":[{"type":"text","text":"A protocol to which number should conform to be initialized from array of bytes and some"},{"text":" ","type":"text"},{"type":"text","text":"endianness. The "},{"type":"codeVoice","code":"Instruments"},{"type":"text","text":" library makes all integer types to conform this protocol."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BytesConstructibleNumber","kind":"identifier"}],"navigatorTitle":[{"text":"BytesConstructibleNumber","kind":"identifier"}],"title":"BytesConstructibleNumber","role":"symbol","url":"\/documentation\/instruments\/bytesconstructiblenumber","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/HexStringDataDecoder":{"abstract":[{"text":"A decoder that takes a hexadecimal string as input and returns an instance of ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HexStringDataDecoder"}],"navigatorTitle":[{"text":"HexStringDataDecoder","kind":"identifier"}],"title":"HexStringDataDecoder","role":"symbol","url":"\/documentation\/instruments\/hexstringdatadecoder","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoder","kind":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/SecureRandomError":{"navigatorTitle":[{"text":"SecureRandomError","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An error that can be thrown by "},{"type":"codeVoice","code":"SecureRandom"},{"text":" if something goes wrong.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SecureRandomError"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandomError","url":"\/documentation\/instruments\/securerandomerror","title":"SecureRandomError"},"doc://instruments.Instruments/documentation/Instruments/HexStringDataDecoderError":{"abstract":[{"type":"text","text":"An error that is thrown when "},{"type":"codeVoice","code":"HexStringDataDecoder"},{"type":"text","text":" fails."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"HexStringDataDecoderError","kind":"identifier"}],"navigatorTitle":[{"text":"HexStringDataDecoderError","kind":"identifier"}],"title":"HexStringDataDecoderError","role":"symbol","url":"\/documentation\/instruments\/hexstringdatadecodererror","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoderError","type":"topic"},"doc://instruments.Instruments/documentation/Instruments":{"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments","type":"topic","role":"collection","title":"Instruments","url":"\/documentation\/instruments","abstract":[{"inlineContent":[{"type":"text","text":"Instruments"}],"type":"emphasis"},{"type":"text","text":" is a package that provides you with set of tools that may be handy for Swift"},{"type":"text","text":" "},{"text":"development.","type":"text"}],"kind":"symbol"},"doc://instruments.Instruments/documentation/Instruments/LinewiseReader":{"abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LinewiseReader","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LinewiseReader"}],"title":"LinewiseReader","deprecated":true,"role":"symbol","url":"\/documentation\/instruments\/linewisereader","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/LinewiseReader","kind":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/Pointer":{"abstract":[{"code":"Pointer","type":"codeVoice"},{"type":"text","text":" is a property wrapper that allows you to work with classes and struct as they would be"},{"type":"text","text":" "},{"text":"pointed in the Objective-C.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Pointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Pointer"}],"title":"Pointer","role":"symbol","url":"\/documentation\/instruments\/pointer","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/WeakShared":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakShared"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"WeakShared"}],"url":"\/documentation\/instruments\/weakshared","abstract":[{"type":"codeVoice","code":"WeakShared"},{"type":"text","text":" is a property wrapper for references types that allow you to share the same"},{"type":"text","text":" "},{"type":"text","text":"instance while reference exists. If there’s no reference, the new object is created."}],"title":"WeakShared","kind":"symbol","role":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/WeakShared"},"doc://instruments.Instruments/documentation/Instruments/DebounceFunction":{"role":"symbol","navigatorTitle":[{"text":"DebounceFunction","kind":"identifier"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunction","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebounceFunction"}],"abstract":[{"type":"text","text":"A function that allows you to debounce some work. It invokes action after a certain amount time"},{"type":"text","text":" "},{"type":"text","text":"if there’s no new calls during this time. Can be called dynamically due to "},{"type":"codeVoice","code":"@dynamicCallable"},{"text":".","type":"text"}],"kind":"symbol","title":"DebounceFunction","type":"topic","url":"\/documentation\/instruments\/debouncefunction"},"doc://instruments.Instruments/documentation/Instruments/LineByLineReader":{"abstract":[{"text":"A reader that reads file line by line by using given delimiter.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"LineByLineReader","kind":"identifier"}],"navigatorTitle":[{"text":"LineByLineReader","kind":"identifier"}],"title":"LineByLineReader","role":"symbol","url":"\/documentation\/instruments\/linebylinereader","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/LineByLineReader","kind":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/HexStringDataDecoder/init()":{"abstract":[{"text":"Creates and returns an instance of ","type":"text"},{"type":"codeVoice","code":"HexStringDataDecoder"},{"type":"text","text":"."}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"title":"init()","role":"symbol","url":"\/documentation\/instruments\/hexstringdatadecoder\/init()","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoder\/init()","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/HexStringDataDecoder/decode(_:)":{"abstract":[{"text":"Decodes a hexadecimal string to a ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" instance."}],"type":"topic","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoder\/decode(_:)","kind":"symbol","role":"symbol","title":"decode(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"}],"url":"\/documentation\/instruments\/hexstringdatadecoder\/decode(_:)"},"doc://instruments.Instruments/documentation/Instruments/LLDB":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"LLDB","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LLDB"}],"url":"\/documentation\/instruments\/lldb","abstract":[{"type":"text","text":"Scope for functions to work with debugger."}],"title":"LLDB","kind":"symbol","role":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/LLDB"},"doc://instruments.Instruments/documentation/Instruments/SecureRandom":{"navigatorTitle":[{"kind":"identifier","text":"SecureRandom"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"An object that provides you functionality to generate bytes or numbers in a secure way."}],"url":"\/documentation\/instruments\/securerandom","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandom","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SecureRandom","kind":"identifier"}],"title":"SecureRandom"},"doc://instruments.Instruments/documentation/Instruments/DebounceFunctionConfiguration":{"abstract":[{"type":"text","text":"A global configuration of "},{"code":"DebounceFunction","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunctionConfiguration","type":"topic","kind":"symbol","role":"symbol","title":"DebounceFunctionConfiguration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"DebounceFunctionConfiguration","kind":"identifier"}],"url":"\/documentation\/instruments\/debouncefunctionconfiguration","navigatorTitle":[{"text":"DebounceFunctionConfiguration","kind":"identifier"}]},"doc://instruments.Instruments/documentation/Instruments/DelegatePool":{"title":"DelegatePool","role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DelegatePool"}],"abstract":[{"text":"An object that stores delegates in an array by using weak references to delegate. Each time you","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iterate through delegates, it removes "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" references from the array. Class is designed to be"},{"type":"text","text":" "},{"type":"text","text":"thread safe."}],"type":"topic","url":"\/documentation\/instruments\/delegatepool","navigatorTitle":[{"text":"DelegatePool","kind":"identifier"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/DelegatePool"},"doc://instruments.Instruments/documentation/Instruments/Timer":{"kind":"symbol","url":"\/documentation\/instruments\/timer","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Timer","navigatorTitle":[{"text":"Timer","kind":"identifier"}],"abstract":[{"text":"A timer that fires after a certain time interval has elapsed, invoking a specified action. Built","type":"text"},{"type":"text","text":" "},{"type":"text","text":"on top of "},{"code":"DispatchSourceTimer","type":"codeVoice"},{"type":"text","text":"."}],"title":"Timer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Timer","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/Endianness":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Endianness"}],"type":"topic","navigatorTitle":[{"text":"Endianness","kind":"identifier"}],"url":"\/documentation\/instruments\/endianness","abstract":[{"text":"An order of bytes which can be either ","type":"text"},{"type":"codeVoice","code":"BE"},{"type":"text","text":" or "},{"type":"codeVoice","code":"LE"},{"type":"text","text":"."}],"title":"Endianness","kind":"symbol","role":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Endianness"}}}