{"metadata":{"roleHeading":"Initializer","symbolKind":"init","role":"symbol","externalID":"s:11Instruments24BytesConstructibleNumberPAAE4data10endiannessx10Foundation4DataV_AA10EndiannessOtcfc::SYNTHESIZED::s:s5Int32V","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":", "},{"text":"endianness","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Instruments10EndiannessO","text":"Endianness","kind":"typeIdentifier"},{"text":")","kind":"text"}],"extendedModule":"Instruments","modules":[{"name":"Instruments"}],"title":"init(data:endianness:)"},"hierarchy":{"paths":[["doc:\/\/instruments.Instruments\/documentation\/Instruments","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/Int32"]]},"abstract":[{"text":"Creates and returns a new instance of a number with a given parameters.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"data","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"endianness"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Instruments10EndiannessO","text":"Endianness","kind":"typeIdentifier","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Endianness"},{"text":" = .big)","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance of "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" that will be used to initialize a number."}]}],"name":"data"},{"name":"endianness","content":[{"type":"paragraph","inlineContent":[{"text":"An endianness to be used to initialize a number. Defaults to ","type":"text"},{"code":".big","type":"codeVoice"},{"type":"text","text":"."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"If number of bytes exceeds type size, it truncates bytes in the beginning or end depending","type":"text"},{"type":"text","text":" "},{"text":"on endianness. In case of BE it takes last ","type":"text"},{"code":"MemoryLayout<Self>.size","type":"codeVoice"},{"text":" bytes, and in case of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"LE it takes first "},{"code":"MemoryLayout<Self>.size","type":"codeVoice"},{"type":"text","text":" bytes."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If number of bytes is less that "},{"type":"codeVoice","code":"MemoryLayout<Self>.size"},{"type":"text","text":", it adds zero bytes in the"},{"text":" ","type":"text"},{"text":"beginning or end depending on endianness. In case of BE it adds bytes in the beginning, and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in case of LE it adds bytes in the end."}]}]}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/Int32\/init(data:endianness:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/instruments\/swift\/int32\/init(data:endianness:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://instruments.Instruments/documentation/Instruments/Swift":{"type":"topic","url":"\/documentation\/instruments\/swift","abstract":[],"title":"Swift","kind":"symbol","role":"collection","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift"},"doc://instruments.Instruments/documentation/Instruments":{"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments","type":"topic","role":"collection","title":"Instruments","url":"\/documentation\/instruments","abstract":[{"inlineContent":[{"type":"text","text":"Instruments"}],"type":"emphasis"},{"type":"text","text":" is a package that provides you with set of tools that may be handy for Swift"},{"type":"text","text":" "},{"text":"development.","type":"text"}],"kind":"symbol"},"doc://instruments.Instruments/documentation/Instruments/Swift/Int32":{"abstract":[],"type":"topic","url":"\/documentation\/instruments\/swift\/int32","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"identifier","text":"Int32"}],"navigatorTitle":[{"text":"Int32","kind":"identifier"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/Int32","title":"Int32","kind":"symbol","role":"symbol"},"doc://instruments.Instruments/documentation/Instruments/Swift/Int32/init(data:endianness:)":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates and returns a new instance of a number with a given parameters."}],"title":"init(data:endianness:)","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Swift\/Int32\/init(data:endianness:)","url":"\/documentation\/instruments\/swift\/int32\/init(data:endianness:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"text":", ","kind":"text"},{"text":"endianness","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Instruments10EndiannessO","text":"Endianness","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://instruments.Instruments/documentation/Instruments/Endianness":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Endianness"}],"type":"topic","navigatorTitle":[{"text":"Endianness","kind":"identifier"}],"url":"\/documentation\/instruments\/endianness","abstract":[{"text":"An order of bytes which can be either ","type":"text"},{"type":"codeVoice","code":"BE"},{"type":"text","text":" or "},{"type":"codeVoice","code":"LE"},{"type":"text","text":"."}],"title":"Endianness","kind":"symbol","role":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Endianness"}}}