{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Extended Module","role":"collection","title":"Foundation","modules":[{"name":"Instruments"}],"externalID":"s:m:s:e:s:10Foundation4DataV11InstrumentsE16HexStringOptionsV","symbolKind":"extension"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Foundation"},"topicSections":[{"anchor":"Extended-Classes","title":"Extended Classes","identifiers":["doc:\/\/instruments.Instruments\/documentation\/Instruments\/Foundation\/DateFormatter"],"generated":true},{"anchor":"Extended-Structures","generated":true,"title":"Extended Structures","identifiers":["doc:\/\/instruments.Instruments\/documentation\/Instruments\/Foundation\/Data"]},{"title":"Extended Types","anchor":"Extended-Types","generated":true,"identifiers":["doc:\/\/instruments.Instruments\/documentation\/Instruments\/Foundation\/JSONDecoder"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Endianness","doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunction","doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunctionConfiguration","doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoder","doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoderError","doc:\/\/instruments.Instruments\/documentation\/Instruments\/LLDB","doc:\/\/instruments.Instruments\/documentation\/Instruments\/WeakShared","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer","doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandom","doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandomError","doc:\/\/instruments.Instruments\/documentation\/Instruments\/Timer","doc:\/\/instruments.Instruments\/documentation\/Instruments\/LineByLineReader","doc:\/\/instruments.Instruments\/documentation\/Instruments\/LinewiseReader","doc:\/\/instruments.Instruments\/documentation\/Instruments\/UnfairLock"],"title":"List of Tools","generated":true,"anchor":"List-of-Tools"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/instruments.Instruments\/documentation\/Instruments"]]},"variants":[{"paths":["\/documentation\/instruments\/foundation"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://instruments.Instruments/documentation/Instruments/LLDB":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"LLDB","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LLDB"}],"url":"\/documentation\/instruments\/lldb","abstract":[{"type":"text","text":"Scope for functions to work with debugger."}],"title":"LLDB","kind":"symbol","role":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/LLDB"},"doc://instruments.Instruments/documentation/Instruments/Timer":{"kind":"symbol","url":"\/documentation\/instruments\/timer","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Timer","navigatorTitle":[{"text":"Timer","kind":"identifier"}],"abstract":[{"text":"A timer that fires after a certain time interval has elapsed, invoking a specified action. Built","type":"text"},{"type":"text","text":" "},{"type":"text","text":"on top of "},{"code":"DispatchSourceTimer","type":"codeVoice"},{"type":"text","text":"."}],"title":"Timer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Timer","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/Foundation":{"url":"\/documentation\/instruments\/foundation","type":"topic","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Foundation","role":"collection","abstract":[],"title":"Foundation","kind":"symbol"},"doc://instruments.Instruments/documentation/Instruments/Foundation/JSONDecoder":{"type":"topic","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Foundation\/JSONDecoder","url":"\/documentation\/instruments\/foundation\/jsondecoder","kind":"symbol","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"abstract":[],"role":"symbol","title":"JSONDecoder"},"doc://instruments.Instruments/documentation/Instruments/LinewiseReader":{"abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LinewiseReader","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LinewiseReader"}],"title":"LinewiseReader","deprecated":true,"role":"symbol","url":"\/documentation\/instruments\/linewisereader","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/LinewiseReader","kind":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/HexStringDataDecoderError":{"abstract":[{"type":"text","text":"An error that is thrown when "},{"type":"codeVoice","code":"HexStringDataDecoder"},{"type":"text","text":" fails."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"HexStringDataDecoderError","kind":"identifier"}],"navigatorTitle":[{"text":"HexStringDataDecoderError","kind":"identifier"}],"title":"HexStringDataDecoderError","role":"symbol","url":"\/documentation\/instruments\/hexstringdatadecodererror","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoderError","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/LineByLineReader":{"abstract":[{"text":"A reader that reads file line by line by using given delimiter.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"LineByLineReader","kind":"identifier"}],"navigatorTitle":[{"text":"LineByLineReader","kind":"identifier"}],"title":"LineByLineReader","role":"symbol","url":"\/documentation\/instruments\/linebylinereader","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/LineByLineReader","kind":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/BytesConstructibleNumber":{"abstract":[{"type":"text","text":"A protocol to which number should conform to be initialized from array of bytes and some"},{"text":" ","type":"text"},{"type":"text","text":"endianness. The "},{"type":"codeVoice","code":"Instruments"},{"type":"text","text":" library makes all integer types to conform this protocol."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BytesConstructibleNumber","kind":"identifier"}],"navigatorTitle":[{"text":"BytesConstructibleNumber","kind":"identifier"}],"title":"BytesConstructibleNumber","role":"symbol","url":"\/documentation\/instruments\/bytesconstructiblenumber","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/BytesConstructibleNumber","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/Foundation/Data":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Foundation\/Data","navigatorTitle":[{"text":"Data","kind":"identifier"}],"abstract":[],"url":"\/documentation\/instruments\/foundation\/data","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"text":"Data","kind":"identifier","preciseIdentifier":"s:10Foundation4DataV"}],"title":"Data"},"doc://instruments.Instruments/documentation/Instruments/SecureRandom":{"navigatorTitle":[{"kind":"identifier","text":"SecureRandom"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"An object that provides you functionality to generate bytes or numbers in a secure way."}],"url":"\/documentation\/instruments\/securerandom","kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandom","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SecureRandom","kind":"identifier"}],"title":"SecureRandom"},"doc://instruments.Instruments/documentation/Instruments/DebounceFunction":{"role":"symbol","navigatorTitle":[{"text":"DebounceFunction","kind":"identifier"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunction","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebounceFunction"}],"abstract":[{"type":"text","text":"A function that allows you to debounce some work. It invokes action after a certain amount time"},{"type":"text","text":" "},{"type":"text","text":"if there’s no new calls during this time. Can be called dynamically due to "},{"type":"codeVoice","code":"@dynamicCallable"},{"text":".","type":"text"}],"kind":"symbol","title":"DebounceFunction","type":"topic","url":"\/documentation\/instruments\/debouncefunction"},"doc://instruments.Instruments/documentation/Instruments/WeakShared":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakShared"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"WeakShared"}],"url":"\/documentation\/instruments\/weakshared","abstract":[{"type":"codeVoice","code":"WeakShared"},{"type":"text","text":" is a property wrapper for references types that allow you to share the same"},{"type":"text","text":" "},{"type":"text","text":"instance while reference exists. If there’s no reference, the new object is created."}],"title":"WeakShared","kind":"symbol","role":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/WeakShared"},"doc://instruments.Instruments/documentation/Instruments":{"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments","type":"topic","role":"collection","title":"Instruments","url":"\/documentation\/instruments","abstract":[{"inlineContent":[{"type":"text","text":"Instruments"}],"type":"emphasis"},{"type":"text","text":" is a package that provides you with set of tools that may be handy for Swift"},{"type":"text","text":" "},{"text":"development.","type":"text"}],"kind":"symbol"},"doc://instruments.Instruments/documentation/Instruments/SecureRandomError":{"navigatorTitle":[{"text":"SecureRandomError","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An error that can be thrown by "},{"type":"codeVoice","code":"SecureRandom"},{"text":" if something goes wrong.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SecureRandomError"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/SecureRandomError","url":"\/documentation\/instruments\/securerandomerror","title":"SecureRandomError"},"doc://instruments.Instruments/documentation/Instruments/DebounceFunctionConfiguration":{"abstract":[{"type":"text","text":"A global configuration of "},{"code":"DebounceFunction","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/DebounceFunctionConfiguration","type":"topic","kind":"symbol","role":"symbol","title":"DebounceFunctionConfiguration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"DebounceFunctionConfiguration","kind":"identifier"}],"url":"\/documentation\/instruments\/debouncefunctionconfiguration","navigatorTitle":[{"text":"DebounceFunctionConfiguration","kind":"identifier"}]},"doc://instruments.Instruments/documentation/Instruments/Foundation/DateFormatter":{"title":"DateFormatter","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"DateFormatter"}],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormatter","kind":"identifier","preciseIdentifier":"c:objc(cs)NSDateFormatter"}],"kind":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Foundation\/DateFormatter","url":"\/documentation\/instruments\/foundation\/dateformatter","role":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/UnfairLock":{"abstract":[{"type":"text","text":"Low-level lock that allows waiters to block efficiently on contention."}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/UnfairLock","type":"topic","kind":"symbol","role":"symbol","title":"UnfairLock","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnfairLock"}],"url":"\/documentation\/instruments\/unfairlock","navigatorTitle":[{"text":"UnfairLock","kind":"identifier"}]},"doc://instruments.Instruments/documentation/Instruments/Pointer":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Pointer"}],"identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Pointer","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pointer"}],"abstract":[{"code":"Pointer","type":"codeVoice"},{"type":"text","text":" is a property wrapper that allows you to work with classes and struct as they would be"},{"type":"text","text":" "},{"type":"text","text":"pointed in the Objective-C."}],"kind":"symbol","title":"Pointer","type":"topic","url":"\/documentation\/instruments\/pointer"},"doc://instruments.Instruments/documentation/Instruments/HexStringDataDecoder":{"abstract":[{"text":"A decoder that takes a hexadecimal string as input and returns an instance of ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HexStringDataDecoder"}],"navigatorTitle":[{"text":"HexStringDataDecoder","kind":"identifier"}],"title":"HexStringDataDecoder","role":"symbol","url":"\/documentation\/instruments\/hexstringdatadecoder","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/HexStringDataDecoder","kind":"symbol","type":"topic"},"doc://instruments.Instruments/documentation/Instruments/Endianness":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Endianness"}],"type":"topic","navigatorTitle":[{"text":"Endianness","kind":"identifier"}],"url":"\/documentation\/instruments\/endianness","abstract":[{"text":"An order of bytes which can be either ","type":"text"},{"type":"codeVoice","code":"BE"},{"type":"text","text":" or "},{"type":"codeVoice","code":"LE"},{"type":"text","text":"."}],"title":"Endianness","kind":"symbol","role":"symbol","identifier":"doc:\/\/instruments.Instruments\/documentation\/Instruments\/Endianness"}}}